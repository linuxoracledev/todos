[{"F:\\Webdev\\nodereact\\dev\\todos\\src\\index.js":"1","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodoContainer.js":"2","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\Header.js":"3","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\InputTodo.js":"4","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodosList.js":"5","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodoItem.js":"6","F:\\Webdev\\nodereact\\dev\\todos\\src\\pages\\About.js":"7","F:\\Webdev\\nodereact\\dev\\todos\\src\\pages\\NotMatch.js":"8","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\Navbar.js":"9"},{"size":403,"mtime":1640595346092,"results":"10","hashOfConfig":"11"},{"size":2529,"mtime":1640666588357,"results":"12","hashOfConfig":"11"},{"size":406,"mtime":1640492917339,"results":"13","hashOfConfig":"11"},{"size":956,"mtime":1640592245192,"results":"14","hashOfConfig":"11"},{"size":469,"mtime":1640591195558,"results":"15","hashOfConfig":"11"},{"size":1686,"mtime":1640592305650,"results":"16","hashOfConfig":"11"},{"size":204,"mtime":1641368548401,"results":"17","hashOfConfig":"11"},{"size":194,"mtime":1640600435676,"results":"18","hashOfConfig":"11"},{"size":1501,"mtime":1640671027391,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hhis79",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"F:\\Webdev\\nodereact\\dev\\todos\\src\\index.js",[],["41","42"],"F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodoContainer.js",["43"],"import React, { useState, useEffect } from \"react\"\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n//Component\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport TodosList from \"./TodosList\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n//Pages\r\nimport About from \"../pages/About\";\r\nimport NotMatch from \"../pages/NotMatch\";\r\n\r\nconst TodoContainer = () => {\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const handleChange = id => {\r\n    setTodos(prevState => (\r\n      prevState.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo, completed: !todo.completed\r\n          }\r\n        }\r\n        return todo;\r\n      })\r\n    ));\r\n  };\r\n\r\n  const delTodo = id => {\r\n    setTodos({\r\n      todos: [\r\n        ...todos.filter(todo => {\r\n          return todo.id !== id;\r\n        })\r\n      ]\r\n    });\r\n  };\r\n\r\n  const addTodoItem = title => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n\r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n  function getInitialTodos() {\r\n    // getting stored items\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const savedTodos = JSON.parse(temp)\r\n    return savedTodos || []\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('use effect')\r\n    const temp = JSON.parse(localStorage.getItem('todos'))\r\n\r\n    if (temp) {\r\n      setTodos(temp)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // storing todos items\r\n    const temp = JSON.stringify(todos)\r\n    localStorage.setItem(\"todos\", temp)\r\n  }, [todos])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route\r\n          exact path='/'\r\n          element={\r\n            <div className=\"container\">\r\n              <div className=\"inner\">\r\n                <Header />\r\n                <InputTodo addTodoProps={addTodoItem} />\r\n                <TodosList\r\n                  todos={todos}\r\n                  handleChangeProps={handleChange}\r\n                  deleteTodoProps={delTodo}\r\n                  setUpdate={setUpdate}\r\n                />\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <Route path='/about' element={<About />} />\r\n        <Route path='*' element={<NotMatch />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n\r\n}\r\nexport default TodoContainer","F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\Header.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\InputTodo.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodosList.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\TodoItem.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\pages\\About.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\pages\\NotMatch.js",[],"F:\\Webdev\\nodereact\\dev\\todos\\src\\components\\Navbar.js",["44","45"],"import React, { useState } from \"react\";\r\nimport { icons } from \"react-icons\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\n\r\nconst links = [\r\n    {\r\n        id: 1,\r\n        path: \"/\",\r\n        text: \"Home\",\r\n    },\r\n    {\r\n        id: 2,\r\n        path: \"/about\",\r\n        text: \"About\",\r\n    },\r\n]\r\n\r\n\r\nconst Navbar = () => {\r\n    const [navebarOpen, setNavbarOpen] = useState(false)\r\n\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>\r\n                {navebarOpen ? <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} /> : <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />}</button>\r\n            <ul className={`menuNav ${navebarOpen ? \"showMenu\" : \"\"}`}>\r\n                {links.map((link) => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink\r\n                                to={link.path}\r\n                                activeclassname=\"active-link\"\r\n                                onClick={() => closeMenu()}\r\n                            >{link.text}</NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":61,"column":12,"nodeType":"52","messageId":"53","endLine":61,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":15},{"ruleId":"50","severity":1,"message":"55","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'getInitialTodos' is defined but never used.","Identifier","unusedVar","'icons' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]